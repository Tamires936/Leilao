package View;


import Leilao.ProdutosDTO;
import Leilao.ProdutosDAO;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author Tamires
 */
public class listagemVIEW extends javax.swing.JFrame {

   ProdutosDTO DTO;
    Connection conn;    
    
    private PreparedStatement st;
    private ResultSet rs;

    public listagemVIEW() {
        initComponents();
        listarProdutos();
 
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        listaProdutos = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        id_produto_venda = new javax.swing.JTextPane();
        btnVender = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        btnPesquisar = new javax.swing.JButton();
        btnVoltar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        listaProdutos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "ID", "Nome", "Valor", "Status"
            }
        ));
        jScrollPane1.setViewportView(listaProdutos);

        jLabel1.setFont(new java.awt.Font("Lucida Fax", 0, 18)); // NOI18N
        jLabel1.setText("Lista de Produtos");

        jLabel2.setFont(new java.awt.Font("Lucida Fax", 0, 14)); // NOI18N
        jLabel2.setText("Vender Produto (ID)");

        jScrollPane2.setViewportView(id_produto_venda);

        btnVender.setText("Vender");
        btnVender.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVenderActionPerformed(evt);
            }
        });

        btnPesquisar.setText("Consultar Vendas");
        btnPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPesquisarActionPerformed(evt);
            }
        });

        btnVoltar.setText("Voltar");
        btnVoltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVoltarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(193, 193, 193))
            .addGroup(layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnVoltar, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(254, 254, 254)
                        .addComponent(btnPesquisar))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel2)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(btnVender))
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 440, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(49, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(42, 42, 42)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnVender))
                .addGap(29, 29, 29)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 67, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnPesquisar)
                    .addComponent(btnVoltar))
                .addGap(17, 17, 17))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnVenderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVenderActionPerformed
         try {
            alteraStatus();
            consultaIDprodt();
        } catch (SQLException ex) {
            Logger.getLogger(listagemVIEW.class.getName()).log(Level.SEVERE, null, ex);
        }
       listarProdutos();
    }//GEN-LAST:event_btnVenderActionPerformed

    private void btnPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPesquisarActionPerformed
        vendasVIEW vendas = new vendasVIEW(); 
        this.dispose();
        vendas.setVisible(true);
                
        
    }//GEN-LAST:event_btnPesquisarActionPerformed

    private void btnVoltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVoltarActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnVoltarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(listagemVIEW.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(listagemVIEW.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(listagemVIEW.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(listagemVIEW.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new listagemVIEW().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnPesquisar;
    private javax.swing.JButton btnVender;
    private javax.swing.JButton btnVoltar;
    private javax.swing.JTextPane id_produto_venda;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable listaProdutos;
    // End of variables declaration//GEN-END:variables

     public void listarProdutos(){
                
        PreparedStatement st;
        ResultSet rs = null;
        DefaultTableModel modelo = (DefaultTableModel) listaProdutos.getModel();
            modelo.setNumRows(0);
        try{
            conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/leiloes_tdsat", "root", "826390T98#10t11");
            st = conn.prepareStatement("SELECT * FROM produtos");
          
            rs = st.executeQuery();
            while(rs.next()){
                String id = String.valueOf(rs.getString("id"));
                String[] linha = {id, rs.getString("nome"), rs.getString("valor"), rs.getString("status")};
                modelo.addRow(linha);
            }
           listaProdutos.setModel(modelo);
            conn.close();
        }catch(SQLException e){
            JOptionPane.showMessageDialog(null, "Erro na conexão: "+e.getMessage());
        }
     
    }
     public void consultaIDprodt(){
        
        int idProduto = Integer.parseInt(id_produto_venda.getText());
                 
        PreparedStatement st;
        ResultSet rs;
        
        try{
            
             conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/leiloes_tdsat", "root", "826390T98#10t11");
  
           ProdutosDAO produtosdao = new ProdutosDAO();
            boolean status; 
           
            status = produtosdao.connectDB();
            
            st = conn.prepareStatement("select * from produtos WHERE id = ?");
            st.setInt(1, idProduto);
            rs = st.executeQuery();
            
            DefaultTableModel  model = (DefaultTableModel) listaProdutos.getModel();   
            model.setNumRows(0);
            
            while(rs.next()){
                model.addRow(new Object[]{
                rs.getString("id"),
                rs.getString("nome"),
                rs.getString("valor"), 
                rs.getString("status")
                });
            }
            
        } catch (SQLException e){
            e.printStackTrace();
        }
                
    }
    public void listaODBC(){
        
        
        try{
            
           conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/leiloes_tdsat", "root", "826390T98#10t11");

             PreparedStatement prep;
             ProdutosDAO produtosdao = new ProdutosDAO();
             boolean status; 
                         
             status = produtosdao.connectDB();
              PreparedStatement st;
     
             st = conn.prepareStatement("select * from produtos");
            ResultSet rs = st.executeQuery();
            
            DefaultTableModel  model = (DefaultTableModel) listaProdutos.getModel();   
            model.setNumRows(0);
            
            while(rs.next()){
                model.addRow(new Object[]{
                rs.getString("id"),
                rs.getString("nome"),
                rs.getString("valor"), 
                rs.getString("status")
                });
            }
            rs.close();
            conn.close();
            
        } catch (SQLException e){
            e.printStackTrace();
        }
    }
    
    public void alteraStatus() throws SQLException{
        
        int idProduto = Integer.parseInt(id_produto_venda.getText());
        
        ProdutosDAO produtosdao = new ProdutosDAO();
         boolean status; 
        status = produtosdao.connectDB();
         PreparedStatement st;

        
        PreparedStatement ps = null;
        String sql = "Update produtos set status = 'Vendido' where id = ?";
         conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/leiloes_tdsat", "root", "826390T98#10t11");


        try {
            ps = conn.prepareStatement(sql);
            ps.setInt(1,idProduto);
            ps.executeUpdate();

            JOptionPane.showMessageDialog(null,"Dados atualizados com sucesso");
            
            ps.close();
            conn.close();
            
        } catch ( SQLException sqle ) {
            JOptionPane.showMessageDialog(null,"Erro ao tentar inserir dados");
        }
        
     }
}


